log_format                     timed_combined
                               '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               '$request_time $upstream_response_time';


server {
    listen                     80;
    server_name                _;
    return                     301 https://$host$request_uri;
}


server {
    listen                     443 ssl;
    server_name                localhost {{ varda_server_name }};

    ssl_certificate            /etc/ssl/certs/varda.crt;
    ssl_certificate_key        /etc/ssl/private/varda.key;

    ssl_session_timeout        5m;

    ssl_protocols              SSLv2 SSLv3 TLSv1;
    ssl_ciphers                HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;

    client_max_body_size       2G;
    keepalive_timeout          5;

    location = / {
        return                 302 /aule;
    }

    location /api {
        root                   /usr/share/nginx/html;
        access_log             /var/log/nginx/varda.access.log timed_combined;
        error_log              /var/log/nginx/varda.error.log error;
        proxy_set_header       X-Script-Name /;
        proxy_set_header       X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header       X-Real-IP $remote_addr;
        proxy_set_header       X-Scheme $scheme;
        proxy_set_header       Host $http_host;
        proxy_redirect         off;
        proxy_read_timeout     {{ varda_api_proxy_read_timeout }};
        proxy_pass             http://api;
    }

    location /aule {
        alias                  /opt/varda/aule;
        try_files              $uri $uri/ /index.html;
        index                  index.html;
        expires                epoch;
    }
}


upstream api {
    server                     unix:/opt/varda/versions/{{ varda_current }}/run/api.sock fail_timeout=0;
}
